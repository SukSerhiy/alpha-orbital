import Head from 'next/head'
import { useState, useMemo } from 'react'
import { useRouter } from 'next/router'
import { fetchNews, filterNews } from '../lib/utils'
import { CATEGORIES_ENUM } from '../lib/dictionaries';
import Categories from '../components/Categories'
import SearchBox from '../components/SearchBox'
import List from '../components/List'
import Toggle from '../components/Toggle'

export default function Home({ news: newsProp = [] }) {
  const [news, setNews] = useState(newsProp);
  const router = useRouter();
  const { filter, query } = router.query;

  const filteredItems = useMemo(() => (
      filterNews(news, filter, query)
    ),
    [filter, news, query]
  );

  const filteredCategories = useMemo(() => {
    return Object.keys(CATEGORIES_ENUM).reduce((acc, key) => {
      const newsCount = filterNews(news, key).length;
      if (newsCount > 0) {
        return {
          ...acc,
          [key]: CATEGORIES_ENUM[key]
        }
      }
      return acc;
    }, {})
  }, [news])

  const handleRemove = (item) => {
    const index = news.indexOf(item)
    const newerNews = [...news]
    newerNews.splice(index, 1);
    setNews(newerNews);
  }

  const handleRefetch = async () => {
    const newerNews = await fetchNews(filter, query);
    setNews(newerNews);
  }

  const clearCategory = (key) => {
    const newerNews = news.reduce((acc, curr) => {
      if (curr.post_category_id !== key) {
        acc.push(curr);
      }
      return acc;
    }, []);
    setNews(newerNews);
  }

  return (
    <div>
      <Head>
        <title>Alpha Orbital</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Categories categories={filteredCategories} />
        <SearchBox count={filteredItems.length} onRefetch={handleRefetch} />
        <Toggle categories={filteredCategories} onClear={clearCategory} />
        <List items={filteredItems} onRemove={handleRemove} />
      </main>
    </div>
  )
}

export const getServerSideProps = async () => {
  return {
    props: {
      news: await fetchNews()
    }
  }
};
